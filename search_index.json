[
["index.html", "Pangenome Tools for Rapid, Large-Scale Analysis of Bacterial Genomes Frontmatter Dedication Abstract Preface Preface for the online version", " Pangenome Tools for Rapid, Large-Scale Analysis of Bacterial Genomes Thomas Lin Pedersen 2016-08-16 Frontmatter Dedication This dissertation is dedicated to my two amazing sons, Oliver and Adrian, and my fantastic wife, Katie, who have never failed to remind me that the life outside of a PhD is important, amazing, and ultimately the reason for doing research in the first place… Abstract The massive influx of bacterial genome sequences, made possible by advances in sequencing technology, are putting pressure on the tools and algorithms used to analyse them. Many current approaches to creating and analysing pangenomes are not able to sufficiently handle the available amount of data, causing missed insight and opportunities. This dissertation presents three novel tools that adresses both creation and analysis of large pangenomes. FindMyFriends provides a framework that is capable of handling thousands of genomes while providing transparent access to the underlying data. PanViz is an engaging interactive visualization tool that allows users to investigate the structure of functionally annotated pangenome. Hierarchical Sets is a combined clustering and visualization tool for large collections of sets such as pangenomes. The utility of the tools are showcased by creating the full bacterial pangenome based on 4,770 genomes and investigating it using the developed tools. The creation of the pangenome could be finished in 99 hours on standard accessible hardware using a single core with FindMyFriends. Analysis using Hierarchical Sets revealed 225 clusters of genomes with no overlap in their core. The existance of a core was generally linked to genus level and below. The clustering, as well as outlying element analysis, provided by Hierarchical Sets was used to investigate the relationship of a subset of Enterobacteriales, revealing a distinct lineage separating Escherichia and Shigella. Still, it was shown that the two genera share a large collection of mobile elements, a trait that could explain the difficulty in resolving the evolutionary relationship between them. It is found that the tools and approaches presented herein offers a powerful solution to working with large-scale pangenomes. Further research is needed in order to develop a richer set of models and algorithms to extract information from large-scale pangenomes, and the modular nature of FindMyFriends makes it a strong platform to support this goal. Preface This dissertation was supposed to be fully concerned with computational proteomics. The reasons why you are about to read a dissertation concerning comparative microbial genomics instead are many and multifaceted and largely irrelevant. The bottom line is that much of the work done during the first two years are not presented in this dissertation as it concern another research area altogether. Despite not being the initial focus of the project I’ve thoroughly enjoyed immersing myself in the world of comparative genomics. The cornerstone of my scientific interest is in bridging the gap between data and scientist, through development of tools and visualizations that facilitates scientific creativity instead of data overload. To this end the field of comparative microbial genomics has been a perfect subject of my attention and I hope my work will resonate with the community and empower researchers to do more with their genomics data. Due to the duality of my project the contributions of some of the people given thanks below are not obvious in the dissertation. My last supervisor at Chr. Hansen, Maria Månnson, is especially responsible for helping me get through this last, admittedly stressful, year, though you would be hard pressed getting her to acknowledge that. This project has also marked my entry into the world of open source development, especially within the R and Bioconductor communities, and a lot of welcoming people have made this a thoroughly enjoyable experience. Laurent Gatto from Cambridge, Steffen Neumann from IPB Halle, and Vladislav Petyuk from Pacific Northwest National Laboratory are particularly responsible for easing my way into the Bioconductor community, while a multitude of people - no one named, none forgotten - has ensured a positive entry into the wider R community. The Proteomics Core Facility at Biozentrum, Basel, was responsible for an absolutely fantastic and enlightening stay during the first part of my project, so many thanks to Alexander Schmidt, Timo Glatter, Erik Ahrné, and Lars Molzahn. Lastly a warm thanks to the Visual Computing Group at Harvard, especially Hendrik Strobelt and Kasper Dinkla, for responding to my unsolicited plea for assistance in evaluating and discussing the merits of Hierarchical Sets. Work not part of this dissertation Published articles Børsting, M. W., Qvist, K. B., Brockmann, E., Vindeløv, J., Pedersen, T. L., Vogensen, F. K., Ardö, Y. (2014). Classification of Lactococcus lactis cell envelope proteinase based on gene sequencing, peptides formed after hydrolysis of milk, and computer modeling. Journal of Dairy Science, 98(1), 68–77. http://doi.org/10.3168/jds.2014-8517 Jun, S.-R., Leuze, M. R., Nookaew, I., Uberbacher, E. C., Land, M., Zhang, Q., Wanchai, V., Chai, J., Nielsen, M., Trolle, T., Lund, O., Buzard, G. S., Pedersen, T. D., Wassenaar, T. M., Ussery D. W. (2015). Ebolavirus comparative genomics. FEMS Microbiology Reviews, 39(5), 764–778. http://doi.org/10.1093/femsre/fuv031 Published software Bioconductor Pedersen T. L., Petyuk, V. A., Gatto L., Gibb. S. (2015). mzID: An mzIdentML parser for R. R package version 1.8.0. http://bioconductor.org/packages/mzID/ Pedersen T. L. (2015). MSGFplus: An interface between R and MS-GF+. R package version 1.4.0. http://bioconductor.org/packages/MSGFplus/ Pedersen T. L. (2015). MSGFgui: A shiny GUI for MSGFplus. R package version 1.4.0. http://bioconductor.org/packages/MSGFgui/ Gatto L., Pedersen T. L., Gibb. S., Petyuk, V. A. (2015). RforProteomics: Companion package to the “Using R and Bioconductor for proteomics data analysis” publication. R package version 1.8.0. http://bioconductor.org/packages/RforProteomics/ CRAN Pedersen T. L., Hughes, S. (2015). densityClust: Clustering by Fast Search and Find of Density Peaks. R package version 0.2.1 https://cran.r-project.org/package=densityClust Pedersen T. L. (2015). shinyFiles: A Server-Side File System Viewer For Shiny. R package version 0.6.0. https://cran.r-project.org/package=shinyFiles Pedersen T. L. (2016). tweenr: Interpolate Data for Smooth Animations. R package version 0.1.3. https://cran.r-project.org/package=tweenr Unpublished software Pedersen T. L. (2015). MSsary: LC-MS/MS analysis in R. R package version 0.0.10. https://github.com/thomasp85/MSsary Pedersen T. L. (2016). ggforce: Accelerating ggplot2. R package version 0.0.2. https://github.com/thomasp85/ggforce Pedersen T. L. (2016). ggraph: An Implementation of Grammar of Graphics for Graphs and Networks. R package version 0.1.1. https://github.com/thomasp85/ggraph Preface for the online version yada "],
["intro.html", "1 Introduction 1.1 The Microbial Pangenome 1.2 Visualizing Genomic Information 1.3 The Following Chapters", " 1 Introduction “It was the best of times, it was the worst of times” — Charles Dickens, A Tale of Two Cities The life of microbiologists has changed dramatically in the last decade, in no small part due to the advancement in sequencing technology. While other *omics fields have seen great advancements in acquisition methodology, it is fair to say that genomics are leading the pack when it comes to high-throughput data acquisition (figure 1.1). With the next generation sequencing technology lurking just around the corner it is a good bet that the data acquisition rate will explode once again. So this is indeed the best of times to work with genome data. Figure 1.1: Number of genomes deposited in NCBIs Assembly database per year, split by assembly quality. All this data poses a problem though; its existence cannot be ignored but on the other hand it is not guarantied that it can be converted into relevant knowledge. Traditional wet-lab microbiologists are not necessarily equipped to undertake massive data-mining efforts to determine if relevant information is hiding in the vast sea of public or private genome sequence data. Worse still trained bioinformaticians can have a hard time keeping on top of the data influx as it accelerates faster than CPU speed and many available algorithms do not scale linearly. The possibility of drowning in data certainly also makes this the worst of times. The field of comparative microbial genomics lies in the center of this conundrum. The increase in data makes comparative analyses much more powerful, but many tools in use are not developed with the currently available size of data in mind. This in turns diminishing the utility of the increase in available data. This dissertation aims to address some of the shortcomings of current tools, both when it comes to analysis and interpretation of comparative genomics datasets. 1.1 The Microbial Pangenome Within comparative microbial genomics a pangenome is considered a grouping of genes across genomes based on similarity. The term was first defined by 1 in 2004 while 2 one year later published the first pangenome of a species. While the size of some recently published pangenomes (see table 1.1) dwarfs the 8 strains of Streptococcus agalactiae investigated by Tettelin et al., many of the ideas and nomenclature laid out in their paper lives on. Gene groups are often classified by their prevalence among the genomes in the pangenome. Core gene groups are represented in all genomes, accessory gene groups in some, but not all genomes, and singleton gene groups in only a single genome (see figure 1.2 for an overview of structure and terminology). When working with incomplete genome sequences the core is usually redefined to hold gene groups represented in more than a certain (e.g. 0.95) ratio of genomes to make up for missing values (genes) in the dataset. Often the core gene groups are considered a representation of the minimal defining traits of the collection of genomes under investigation, specifically if the pangenome are a collection of strains from the same species the core is thought to represent the defining genes for that species. Conversely accessory gene groups will represent genes that harbors more specialized traits, e.g. niche specific genes, and singleton gene groups will represent strain specific genes as well as sequencing and annotation errors. The interpretation of the different types of gene groups is largely based on species level pangenomes and cannot directly be extrapolated to more heterogeneous pangenomes such as genus level pangenomes and above. Figure 1.2: An Overview of the information captured within a pangenome. Genes are grouped based on similarity to create gene groups (rows in dot matrix) and genomes can either be represented (colored dot) or absent (grey dot) in any gene group. Common pangenome terms are labeled with those not used in this dissertation written in italic. Shell and Cloud gene groups are not always considered completely equivalent to Accessory and Singleton respectively, as the cut between Shell and Cloud can be chosen more freely, so that Shell gene groups are represented by most but not all genomes and Cloud gene groups are represented by only a few (compared to specifically a single genome for Singleton gene groups). 1.1.1 Use of Pangenomes Following the inception of the pangenome concept many studies has used pangenome analysis, either partially or as a cornerstone, for investigation into the genomes of a specific taxon. As can be seen in table 1.1 there is a clear overweight of studies at the species level, though small pangenome studies at the genus level are also common. Contrary to what could be expected there is not a clear tendency to include more genomes in pangenome studies as time has progressed. While some clear outliers exists, the majority of studies report pangenomes containing well below 100 genomes. Some of this can be explained by pangenome studies being utilized for investigating more obscure taxa where less genomes are available. Still, sequencing costs are now so low that poor genome sequence availability can easily be remedied. This is exemplified in recent studies where pathogen outbreaks have been investigated3,4, requiring large amounts of sequencing work. A few studies have ventured into pangenome studies of higher level taxa. 5 created a bacterial pangenome consisting of 573 genomes and used it to investigate gene gain and mutation events at a global scale. 6 created a pangenome of the phylum Chlamydia based on 19 genomes and used it to investigate the evolution and characteristics of the phylum. Lastly, the Bacilli class was investigated using a pangenome based on 172 genomes7 in order to evaluate modeling of core and pangenome size (see below). Pangenomes at the species level tend to show high variation between the included genomes, and it follows that the variation on genus level is even higher. Still, pangenomes at the genus level generally do not consider a higher number of genomes than those at the species level. While small genus level pangenomes can have utility in showing overarching trends, differences, and similarities for a genus, they cannot be regarded as a good representation of the genus as a whole. Thus, strong conclusions on core and pangenome sizes as well as the nature of the core should generally by avoided for these datasets. Table 1.1: A non-exhaustive overview of publications that uses pangenome analysis as foundation or part of their investigation into a specific taxon. Authors Year Level Taxon # Genomes 2 2005 Species Streptococcus agalactiae 8 8 2007 Genus Streptococcus 26 9 2007 Species Streptococcus pneumonia 17 10 2007 Species Haemophilus influenzae 13 11 2007 Genus Prochlorococcus 12 12 2008 Species Neisseria meningitidis 6 13 2008 Species Escherichia coli 17 5 2009 Domain Bacteria 573 14 2009 Species Clostridium difficile 15 15 2009 Genus Listeria 13 16 2009 Species Streptococcus pneumonia 44 17 2010 Genus Campylobacter 102 18 2010 Species Escherichia coli 61 19 2010 Species Enterococcus faecium 7 20 2010 Species Yersinia pestis 14 21 2010 Genus Bifidobacterium 9 22 2010 Species Staphylococcus aureus 17 23 2011 Species Salmonella enterica 45 24 2011 Species Escherichia coli 186 25 2011 Species Moraxella catarrhalis 12 26 2011 Species Neisseria meningitidis 20 6 2011 Phylum Chlamydiae 19 27 2011 Species Lactobacillus casei 17 28 2012 Species Escherichia coli 347 29 2012 Genus Bifidobacterium 81 30 2012 Species Streptococcus mutans 67 31 2012 Species Lactobacillus paracasei 37 32 2012 Species Gardnerella vaginalis 17 7 2012 Class Bacilli 172 33 2012 Genus Leptospira 20 34 2012 Genus Novosphingobium 6 35 2013 Species Listeria monocytogenes 16 36 2013 Species Legionella pneumophila 7 37 2013 Species Salmonella typhi 8 38 2013 Genus Anoxybacillus 6 39 2014 Species Pantoea ananatis 8 40 2014 Genus Streptococcus 46 41 2014 Genus Pseudomonas 1073 42 2014 Species Acinetobacter baumanii 249 43 2014 Genus Acholeplasma 4 44 2014 Genus Legionella 11 45 2015 Species Acinetobacter baumannii 52 46 2015 Species Acinetobacter venetianus 6 47 2015 Genus Weissella 10 48 2015 Genus Mycobacterium 4 49 2015 Species Mycobacterium phlei 6 50 2015 Species Escherichia coli 2085 4 2016 Species Shigella dysenteriae 331 51 2016 Species Streptococcus pneumoniae 4 52 2016 Species Salmonella typhimurium 77 53 2016 Genus Leptospira 20 Pangenomes have many utilities. Often the evolutionary dynamics of a species can be investigated by modeling the presence/absence pattern of gene groups within the genomes in the pangenome. These models can be used to gain insight into the rate of mutations, recombination, and gene transfer within the species. 54 showed that Heaps law could be used to approximate the rate of gene group gain as new genomes are added to a pangenome, 10 developed a model to predict the total number of available gene groups to a species as well as the number of strains necessary to sequence in order to capture them all, while 55 attempted the same based on a binomial mixture model. Evidence has pointed towards most pangenomes being unbound7, meaning that new gene groups will continue to be discovered as new strains are sequenced. To this end 56 developed the Infinitely Many Genes model that directly models gene loss and gene gain rates for the species under investigation. Collectively the above methods are generally concerned with modeling species level pangenomes while less attention has been given to modeling pangenomes of higher level taxa. Another use of pangenomes is in inferring the phylogeny between the included genomes. As opposed to phylogeny inferred from multiple sequence alignment of e.g. 16S ribosomal RNA, pangenome derived phylogeny is based on presence/absence pattern of the total gene pool. Generally pangenome based phylogeny is calculated using standard approaches to hierarchical clustering, though choice of distance measure and clustering algorithm varies. As examples of the diversity, 40 uses a binary distance, 35 uses Jaccard distance and 23 the Manhatten distance. Furthermore, 57 propose that gene groups should be weighted differently based on their prevalence when constructing the distances. The clustering is often performed using standard agglomerative algorithms such as average58 or single linkage2. 16S RNA shows little variation at the species level and below59, meaning that pangenome based phylogeny could have better resolution at these taxon levels. Still, pangenome based phylogeny inference is likely to struggle with species having a high degree of horizontal gene transfer as the presence/absence matrix is no longer a reflection of pure linear evolution. In these cases the created phylogeny can still be of value as it can help detect genomes sharing large amount of genomic material despite lack of shared lineage. Pangenomes can also be investigated for the sake of the gene groups rather than the genomes. Specific genes can be targeted based on their presence/absence pattern, e.g. core gene groups without any known functional annotation. The gene groups of a pangenome can also be used when building a species scaffold for genome scale models60 that makes it easy to create models for specific strains. When phenotypic information is available for the genomes in a pangenome it is possible to perform gene trait matching where gene groups responsible for a specific phenotypic traits is suggested, aiding in the discovery of previously unknown gene functionality. 61 have developed a random forest based model that performs gene trait matching, which was later used to successfully detect genes involved in sugar metabolism of Lactobacillus paracasei31 as well as Lactobacillus rhamnosus62. Apart from the use of pangenome data in hypothesis generation it also holds value as a purely semantic tool that ensures comparable annotation between genomes in a collection. Instead of adding metadata to each single gene in all genomes, the pangenome is used as a dictionary containing all available information about the different gene groups. This ensures a central repository for gene information and makes sure that new information automatically propagate out to all affected genomes. 1.1.2 Creation of Pangenomes A pangenome analysis usually starts with a set of genomes for which coding regions have been detected. The sequences can be untranslated but most often the translated form is used in order to make sure that silent mutations do not affect sequence comparisons. In order to group genes together by similarity, a similarity measure needs to be defined. BLAST is used by all but a few algorithms (see table 1.2) but algorithms differ in how the BLAST results are converted into gene groups. A simple threshold based approach is the x/y rule that defines that if two genes shares more than x% similarity across a stretch of at least y% of one of the sequences then the two genes are considered similar1,2,9,18,23,29,35,39,55,57. The choice of values for x and y vary in the literature and often no formal justification of the chosen values are given. An alternative to the x/y rule is to use the BLAST quality score directly. OrthoMCL63, Sybil64 and Roary65 uses an E‑value threshold to define similarity, while PanOCT66 and LS‑BSR67 uses a normalized bit score threshold. Two general strategies are being used for converting a set of similar gene pairs into gene clusters: either community detection or single linkage. Community detection is based on the graph defined by considering similar pairs as edges. It either employs a custom made community detection algorithm that is tailored to BLAST based data (e.g. PanOCT) or a general purpose algorithm (e.g. markov chain clustering68 in OrthoMCL and Roary). One downside of using community detection algorithms is that they do not ensure that the detected communities are complete subgraphs. This means that the returned gene groups might contain members with pairwise similarities that do not pass the defined threshold. Single linkage extends clusters until all genes similar to the genes in a cluster are also part of the cluster. It can be thought of as a friend-of-a-friend approach and is equivalent to detecting components in the graph used in community detection. It is generally not an advisable approach as it is easy to end up with very heterogeneous clusters where the members are only similar to a subset of the other members. Table 1.2: A list of published tools used to create pangenomes. Alignment covers BLAST and BLAT, K-mer covers CD-Hit and USEARCH, domain covers use of protein domains, and graph covers use of encoding genomes in a de Bruijn graph structure. Citation count is taken from Google Scholar on April 24th, 2016 and is based on the referenced article. Name Year Alignment K‑mer Domain Suffix tree # Citations OrthoMCL63 2003 ⬤ 1916 EDGAR69 2008 ⬤ 185 Panseq70 2009 ⬤ 80 PanCGHweb71 2010 ⬤ 8 CAMBer72 2010 ⬤ 8 PGAT73 2011 ⬤ 23 Sybil64 2012 ⬤ 22 PGAP74 2012 ⬤ 87 PanOCT66 2012 ⬤ 39 PANNOTATOR75 2013 ⬤ 4 GET_HOMOLOGUES76 2013 ⬤ 34 PanFunPro77 2013 ⬤ ⬤ 6 LS-BSR67 2013 ⬤ 23 ITEP78 2014 ⬤ 14 SplitMEM79 2014 ⬤ 12 Harvest80 2014 ⬤ 38 Micropan81 2015 ⬤ ⬤ 3 Roary65 2015 ⬤ ⬤ 10 PanCoreGen82 2015 ⬤ 0 BPGA83 2015 ⬤ ⬤ 0 compressed de Bruijn graph84 2016 ⬤ 2 BLAST is a relatively slow algorithm and comparing all sequences with each other furthermore imposes a quadratic scaling making computations of large pangenomes unfeasible or restricted to institutions with access to high performance computing hardware. A few papers have explored alternatives to BLAST in order to speed up computations and/or provide a linear scaling. PanFunPro77 annotates every gene using InterProScan85,86 and groups genes that contains the same domains. Micropan81 provides a similar approach in addition to standard BLAST procedures, using HMMER387 on a domain database of the users choice. While the use of protein domains seems a reasonable way to simplify the data structure and speed up computations there is a risk of grouping highly annotated genes more rigorously then those with few identified domains. The extreme case are genes containing no known domains for which this approach is unfeasible and an alternative clustering approach is needed. This creates a two-tier clustering scheme where the resulting gene groups are not necessarily comparable in quality. Another way of speeding comparisons up is to use K‑mer based alignment-free approaches, such as CD‑Hit88,89 or USEARCH90. These algorithms are orders of magnitude faster than BLAST and can cut down on computational time by either preclustering very similar sequences prior to BLAST comparison65 or by being used as the main clustering algorithm83. A completely different approach is provided by splitMEM79 that aligns the full genomes instead of the protein sequences using a de Bruijn graph. The graph is build up incrementally and genomes can be added in linear time. Once the graph has been created it is trivial to locate genes and find the genomes on which they are located. While the algorithm works in linear time it has a huge memory overhead, making it difficult to apply to larger pangenomes. Recently 84 improved on the splitMEM approach to reduce the memory requirement and while it is still unable to handle thousands of genome sequences it is interesting to see whether this new approach to pangenome analysis will gain traction. While citation count is not a perfect proxy for usage statistics it is clear that BLAST based pangenome tools are still in heavy use, and the approach is still being incorporated into newly released tools (table 1.2). Still, many recent tools are exploring alternative strategies as a reaction to the need for faster and more scalable pangenome tools. When looking solemnly on sequence similarity it is impossible to determine the correct clustering in the presence of paralogues. Most algorithms ignores this and simply includes paralogues into the same gene group leading to genomes being represented multiple times in some gene groups. Recently some algorithms have opted for a strict orthologue grouping of genes by incorporating information about the surrounding chromosomal neighborhood into the clustering. IONS91 was an early algorithm that reanalyzed gene groups created by other algorithms and split them up based on similarity between the members genomic neighborhood. Such a two step process is also employed directly by Roary. PanOCT on the other hand incorporates the neighborhood information directly into the similarity score. Correctly resolving paralogues is essential for e.g. gene trait matching and other models that expect a strict orthologue grouping of genes, but the algorithms to do so still receives far less attention in publications. Another question that arises when determining grouping criteria is how to treat gene fragments arising from frameshift events. When used in the context of evolutionary studies these fragments corresponds to very slight mutational changes and disregarding their presence completely could give these changes too much weight during phylogeny inference. Conversely in studies focusing on phenotypes the inclusion of gene fragments together with functional genes would deteriorate the predictive power of the data set. As with the question of paralogue determination most algorithms ignore this and simply include fragments if they pass the defined threshold. PanOCT deliberately examines gene groups for fragments and if present ensures that only the longest fragment from each frameshift event is included in the group. Currently no algorithm includes the possibility of removing the fragments altogether during the clustering, but it can relatively easy be performed as a second step by examining the lengths of the genes in each group. The multiple ways in which a pangenome can be constructed, the differences in interpretation of what constitutes a gene group as well as the different taxon levels that can be chosen requires clarity when discussing result of pangenome analyses. This dissertation will qualify the notion of pangenomes with its taxon level if relevant, e.g. genus-level pangenome, to make sure the nature of the discussed pangenome is apparent. 1.2 Visualizing Genomic Information Visualization has played a major role in the progress within genome analysis that has happened in the last two decades. This is due to their ability to facilitate the interpretation of the increasingly massive and complex data resulting from the improvement in acquisition technologies. The majority of genomic visualization tools focuses on showing information linked to chromosomal position, such as annotations and sequence statistics and many approaches to comparative genomics visualization are derivative of these efforts. Thus, in order to understand the current state of pangenome visualization it is necessary to first understand the approaches to genomic visualization in general. 1.2.1 Visualizing a Genome The predominant way of visualizing genomes is by using the chromosome as an axis and plot features of the sequence along that. Multiple features can be plotted on top of each other in separate lanes, making it possible to show a wide variety of information at once. There is no shortage of tools for creating such plots and this visualization type is often directly implemented into GUI-based genomics software92–101. Two different layouts are often used for these types of visualizations, either linear or circular. The circular layout was popularized by tools such as Circos102 and maps chromosomal position to radians (see e.g. 95). The benefit is that circles are space filling and allows for easy linking between different areas of the chromosome using edges or chords. Unfortunately, zooming in on circular layouts are not straightforward due to the angular difference between different points. Furthermore, as multiple lanes are added to the visualization the outer lanes will gain more prominence as their arc length will be longer than an equivalent area in an inner lane. These problems are not present with linear layouts, but these are less suited to show the complete genome at once due to their lack of compactness. These differences means that circular layouts are often used for overview visualizations whereas linear layouts are used for detail views of specific areas of the genome (as in e.g. 98). 1.2.2 Showing Genome Relationships While often being used in the context of pangenome analysis many visualizations in comparative genomics are not concerned with strict pangenome data. Often the focus is on how the full genome sequences relate to each other and the synteny between them. There are two popular approaches to synteny visualization: tile and edge based. Tile based synteny visualization uses a single reference genome to define an axis and then shows presence of matching stretches of DNA in other genomes as heatmap lanes64,93,103–109 (see figure 1.3A). Edge based synteny visualization does not use a reference genome but draws each genome and shows matching genome areas as lines between the matching position on the respective genomes110–115 (see figure 1.3C). Both approaches, while still popular, were developed at a time where the prospect of analyzing hundreds of genomes in concert seemed foreign, and they lack the scalability that is needed for the sizes of pangenomes being created today. It may be possible to add hundred lanes on a tile based synteny plot, but the reliance on a single reference genome will make the plot less and less representative of the dataset as lanes are added. For edge based synteny visualization the lack of scalability is related to the fact that when comparing more than three genomes lines will begin to cross each other making the plot difficult to read. Usually pangenome visualizations resort to simplifying genome synteny into a single measure of similarity between genomes in order to achieve scalability. BLAST matrices and similar heatmap based visualizations shows genome similarity by mapping the derived similarity to color9,22,23,29,37,77 (see figure 1.3F), while dendrograms are used to show hierarchical clustering based on the derived similarity15,18,23,24,27,29,31,37,40,41 (see figure 1.3B); often the two plot types are combined to offer a better overview of the data. Figure 1.3: Examples of popular approaches to visualizing genome relationships, employed in the pangenome literature. A: A circular tile-based comparison between an E. coli genome and 27 other genomes103. B: A dendrogram created based on the presence/absence matrix of 46 Streptococcus genomes, using binary distance and complete linkage40. C: An edge based comparison between the X chromosome of humans and mice113. D: A line plot showing the evolution in core and pangenome size in a pangenome based on eight Salmonella typhi genomes37. E: A rose plot showing the number of unique genes among 22 Salmonella enterica genomes23. F: BLAST-matrix showing the pairwise similarity of 20 Lactobacillus genomes29. The most predominant pangenome visualization that directly shows pangenome data is the line plot showing the evolution in pangenome and core size as genomes are added to the pangenome. This plot comes in two flavors: one that shows specific genomes being added one at a time9,18,22–24,29,31,41,60,77,116 and one that bootstraps the selection of genomes for every number of genomes13–17,19–21,30,35,37,39,54,76,117 (see figure 1.3D). The former can better show the effect a single genome can have on the total pangenome, but is very sensitive to the order in which genomes are added. The latter can show the general tendency of the evolution but cannot be used to gain knowledge into any single genome. Other direct visualizations of pangenome data exists but has yet to gain wide adoption. Pan‑Tetris118 shows the complete presence/absence matrix within an interactive user interface, denoting the strand location for each gene and allowing gene groups to be combined visually. Rose plots, a special case of Euler diagrams, are sometimes used to show the number of singletons within each genome in relation to the size of the combined accessory and core size23,36,44 (see figure 1.3C). Related to this type of visualization are Venn diagrams that are sometimes used to show the shared gene groups between genomes6,8,34,38,43,48,53,69, but as Venn diagrams does not support more than five sets at a time this approach is very limited in scalability. GenoSets119 uses the same notion of set theory as rose plots and Venn diagrams but shows gene groups through a parallel sets plot with axes corresponding to subsets of the pangenome. In this way it is possible to show how gene group classification changes with the subsetting, aiding in visually identifying gene groups adhering to a specific pattern. Often gene groups are considered as separate entities in pangenome visualizations, but the chromosomal location of their member genes on their respective genomes gives an inherent link between gene groups. This location link is apparent in the tile based synteny visualizations, but as discussed this approach has severe scalability limitations. There have been very few attempts to reconcile scalability with visualization of chromosomal location. GenomeRing120 is one such attempt where shared chromosomal regions in the pangenome are identified and each genome is traced through their respective regions in a circular layout. This visualization has many of the benefits of tile based synteny visualization in that additional annotation can be added in relation to chromosomal position, while avoiding the need for a reference genome. Still the scalability of GenomeRing is very dependent on the similarity of the included genomes. A low similarity will lead to a high number of chromosomal regions and a high number of genomes will result in a large number of lines tracing each genome around the circle, both resulting in more clutter and lower readability. There is generally a lack of novelty when it comes to the development of new visual analytics approaches to pangenomes and very few address the problem of scalability. This can in part be explained by the fact that up until now it has been very computationally expensive to generate large pangenomes. In addition, this cost has also led to less development in analytical approaches to large and heterogeneous pangenomes, again having a negative effect on the development of the visualization side of the analysis. For all the development within genomics and sequencing, pangenome analysis has remained firmly grounded, with a few exceptions, in species-level pangenomes containing well below 100 genomes. The following chapters will address some of the issues raised above, specifically the goal of this thesis is to: present a high quality and scalable approach to pangenome calculations that is capable of handling thousands of genomes across the bacterial domain. provide novel analysis and visualization approaches that can handle large and heterogeneous pangenomes, thus facilitating the interpretation of them. 1.3 The Following Chapters The following three chapters each centers around an article. Each chapter will include a short introduction, followed by the article itself, and concluded with a short discussion. Chapter 2 will describe the FindMyFriends framework for working with pangenome data and its chromosomal neighborhood-based algorithm for gene clustering. Chapter 3 will describe PanViz, an interactive visualization of functionally annotated pangenomes. Chapter 4 will describe the Hierarchical Sets analysis and its applicability to pangenome data. Succeeding the three chapters will be a chapter tying all tools and analyses developed together, followed by a chapter with discussion on the merits of the proposed methods in relation to what is already available. References "],
["fmf.html", "2 How to Build a Pangenome", " 2 How to Build a Pangenome “Programming interfaces are user interfaces” — Mike Bostock, Creator of D3.js The foundation for large-scale pangenome analysis will be described in this chapter with the introduction of the FindMyFriends framework. The algorithms that allow FindMyFriends to create high-quality pangenomes from thousands of genomes will be described in the following article. As the focus in the article is on the novel algorithms provided by FindMyFriends less attention is given to the infrastructure that the framework provides as the basis for all algorithms. The motivation for developing FindMyFriends into a full framework rather than a tool that produces pangenomes is the lack of a coherent solution for working with pangenome data that has existed up until now. The approach employed by current tools is to provide a main command that takes care of reading in, comparing, and clustering genome sequences, writing the results to several text files. Acknowledging that researchers often wants more than producing a pangenome many tools provide several secondary functions that understands the result files and can perform additional post-processing and reporting tasks such as creating generic plots and converting the results to other format. While this works well for handling the tasks that are supported by the tools, it puts a considerable stumbling block in front of researchers that wish to investigate their results in other ways. Further, it makes it difficult for bioinformatic developers to extend the functionality provided by a tool by e.g. adding support for new sequence formats or additional visualizations. This has resulted in several tools that basically repacks existing algorithms and provide an additional layer of post-processing76,83. Unfortunately, these tools have the same type of restrictions as described above, namely that if their functionality does not satisfy the needs of the researcher there is no easy access to the underlying data, due to lack of proper interface. FindMyFriends is an attempt to solve the problems stated above. While scientific progress is sure to make the algorithms it currently provides obsolete at some point, it is my hope that the successors will be developed on top of the FindMyFriends framework. This would ensure that minimum strain is put on the users, making them more prone to adopt new approaches as they are developed. In order to attract both developers and users to the platform, FindMyFriends offers both a powerful and extensible API. Developers can add support for new input file types as well as new back-end storage that users can utilize without changing any work-flows. It is furthermore possible to develop new algorithms on top of the framework, with transparent access to all data, without worrying how the data is stored. This means that it is easy to add a new clustering algorithm, post-processing analysis, or visualization tool, without having to spend time on managing data-flows. Users are provided a very powerful access to all parts of their data and can easily extend their analysis with other tools from Bioconductor, as pangenome data is easily available in standard data formats. The following article, intended for submission to Nature Methods, will describe the algorithm used by FindMyFriends to provide fast and accurate grouping of genes from thousands of genomes in more detail. It includes speed and accuracy benchmarking against a selection of other popular tools, as well as a case study based on 4,770 genomes from the full bacterial domain. Supplementary figures are available in appendix and the bacterial pangenome as well as the raw sequences are available in appendix . Article 1 FindMyFriends: A Framework for Fast and Accurate Pangenome Analysis of Thousands of Diverse Genomes The benchmarking provided in the article clearly shows the qualities of the implemented algorithms in terms of speed and accuracy. Further, the bacterial pangenome case-study is the largest published pangenome and by far the one with highest taxon coverage. That this pangenome was generated in a matter of days, on a computer accessible to everyone marks a shift in what is possible for researchers without access to high-performance computing hardware. With the exception of annotating the gene groups with Pfam domains, all the downstream analysis of the pangenome was done on an underpowered laptop, underscoring the efficiency of the data handling implementation. For users that simply want to create a pangenome for a few genomes and get the core size, FindMyFriends might seem like using a sledgehammer to crack a nut, but I expect users with such small requirements are few an far between. Contrary I believe that a powerful common framework for pangenome research is an absolute requirement to advance pangenome analysis to the next level. Whether FindMyFriends will be that framework is too early to say, but the growth and popularity of both R and Bioconductor within biological data analysis puts it in a very favorable spot. References "],
["pv.html", "3 What’s in a Pangenome", " 3 What’s in a Pangenome “That which is striking and beautiful is not always good, but that which is good is always beautiful.” — Anne “Ninon” de l’Enclose This chapter will introduce the interactive pangenome visualization PanViz. The visualization is an attempt to challenge the current approaches to mapping pangenome data to visual elements, by providing a visualization of the distribution of gene groups in a way that scales well with the number of genomes and gene groups. Scalability in data visualization can effectively be achieved by defining meaningful summary statistics for the data points the visualization should scale with. In the case of PanViz, and pangenome data in general, the two dimensions that are subject to scale change are the number of genomes and the number of gene groups. Visualizations of synteny (see section @ref{showing-genome-relationships}) often scales with the number of genomes and quickly reach a maximum. Contrary to this, PanViz uses gene groups as the primary data. In order to provide a scalable visualization of gene groups, PanViz relies on two natural classification schemes. The first is the core/accessory/singleton division indigenous to pangenome analysis, the second is classification into the top level biological processes provide by the Gene Ontology121. By visualizing the levels of these two classification schemes and scale the size of each level to the number of gene groups they represent, PanViz effectively makes the number of visual element independent on the number of gene groups. The two classification schemes are fundamentally different in nature: the classification by biological process describes an inherent quality of the gene group itself, while the pangenome classification describes a relationship between the genomes in the pangenome. This difference means that the gene ontology classification is static while the pangenome classification is subject to change if a different selection of genomes is investigated, e.g. by subsetting the pangenome. This duality in classification leads to the main interaction implemented in PanViz where the user can select different subsets of the pangenome and follow how gene groups from different gene ontology classifications change their pangenome classification. The utility of this is in detecting structure in how different biological processes are related to the current selection of genomes. In PanViz the lowest number of genomes in a pangenome subset is two, though it could be argued that a single genome could be viewed as a pangenome. In order to look at the genome level it is possible to compare up to two different genomes with the currently selected pangenome. This visualization shows how the content of each genome is represented in the pangenome, e.g. if most of the genes related to metabolic processes are part of the core or, if the selected genome is not part of the pangenome, whether certain biological processes are less represented than others. The choice of only looking at the top level biological processes is necessary in order to limit the number of visual elements in the visualization. This choice impose a lack of granularity though, as e.g. metabolic processes covers a wide variety of more detailed terms within the gene ontology. In order to investigate the gene ontology classification of the gene groups in more detail, a third visualization is provided. This visualization maps the sub-terms of the gene ontology onto a zoom-able treemap weighted by the number of gene groups each sub-term covers. In addition to the pure visualization part it is also possible to extract raw gene group information from PanViz. This is implemented as a visual querying system, relying on the fact that all visual elements in PanViz represent a set of gene groups. The gene groups represented by an element can be selected and subsequently refined by applying set operations (intersection, union, etc.) between the current selection and other visual elements. The following article, submitted to Bioinformatics, gives a brief overview of the PanViz visualization. Figure S1 from the supplementary material is added to the end to aid the reader. The supplementary figure is available in appendix and the an example of the visualization is available in appendix . Article 2 PanViz: Interactive Visualization of the Structure of Functionally Annotated Pangenomes The goal with PanViz was to create a rich, scalable, and interactive visualization of gene group distributions. Some of the challenges facing such a utility when it comes to gaining wide adoption is in how easily it can fit into the work-flow of researchers. Often interactive visualizations are tied to specific software, making it potentially difficult to incorporate into existing pipelines. Further, reliance on a specific software makes these visualizations more difficult to share with collaborators stymieing their use as communicative tools. PanViz handles these challenges by being implemented as a completely self-contained HTML file that can be opened in all modern browsers. Both the JavaScript code powering the visualization as well as the data is embedded within the file resulting in a visualization that can be accessed by anyone with a reasonable modern computer. This solves the issue of share-ability, but generating the visualization still requires an easily accessible interface. PanViz solves this by delegating the creation of new visualizations to the PanVizGenerator R package. This package makes it easy to provide native support for different tools, such as FindMyFriends, as well as provide generic functions that can be accessed by unsupported tools. Whether the choices taken with regards to the implementation will result in a tool that is easier to adopt and share, thus leading to higher usage has yet to be seen as the tool is still too new assess adoption. References "],
["hs.html", "4 It’s Pangenomes All the Way Down", " 4 It’s Pangenomes All the Way Down “I have a strong feeling that the subject of evolution is beautiful without the excuse of creationists needing to be bashed.” — Richard Dawkins, Evolutionary biologist Hierarchical Sets, which will be introduced in this chapter, is an attempt to provide a visualization approach that communicate the relationship between genomes in a pangenome, using native pangenome metrics. The aim has been to replicate the information encoded in the pangenome visualizations based on Venn diagrams, where there is a clear mapping between core, accessory, and singleton sizes and the different areas of circle overlaps. The reason for not using Venn diagrams is that they lack scalability, getting progressively less interpretable above three genomes. Venn diagrams are a natural choice for pangenome data because pangenome data, as well as the core, accessory, and singleton definitions, has clear analogies in set algebra. Thus, it seems that set visualization approaches are a natural fit for pangenome data. Unfortunately, while progress has been made when it comes to scalable set visualizations (see e.g. 122 and 123), none of the current approaches support the scale made possible by FindMyFriends. In order to effectively utilize the data encoded in pangenomes containing thousands of genomes it was necessary to develop an entirely new approach to set visualization. The following article, submitted to Bioinformatics, describes the motivation and theory behind the Hierarchical Sets visualizations and how it relates to pangenome analysis. While the examples in the paper are based on a relatively small pangenome containing 46 genomes, this number of genomes is already outside the usability range of other approaches to set visualization. Chapter 4 will show how Hierarchical Sets scale to much larger pangenomes. Supplementary figures are available in appendix . Article 3 Hierarchical Sets: Analyzing Pangenome Structure through Scalable Set Visualizations The difference between the two visualizations presented in this dissertation is stark. PanViz is flashy and engaging while Hierarchical Sets is static and more subdued. This reflects the basic difference between the goals of the two visualizations. The basic mapping between data and visual elements employed in PanViz are all well defined and the achievement of the visualization is more related to how it uses these prior techniques to describe pangenome data. In the case of Hierarchical Sets a completely new mapping between a fundamental data entity, a set family, and a visual representation is created. The fact that this mapping is so well-suited for pangenome data is a side-effect of pangenomes having a clear set-algebraic interpretation. I strongly believe that new solutions to fundamental visualization problems, such as the problem of scalable set visualization, should be as bare-bone as possible, optimally avoiding the need for interaction. In this way the visualization can easily be augmented, adapted, or incorporated into other, more specialized, visualizations. Hierarchical Sets can easily be improved further as a pure pangenome analysis tool, by incorporating domain-specific functionalities, or be used to improve the pangenome overview panel in PanViz. This would be more difficult if the basic visualization technique required interactions and animations in order to solve its task, such as the case with Radial Sets123. References "],
["bp.html", "5 The Sum of it All 5.1 An Overview of the Bacterial Pangenome 5.2 Looking at the Panchromosome 5.3 A Very Large Set Family", " 5 The Sum of it All “The whole is greater than the sum of its parts.” — Aristotle The tools presented in the three preceding chapters are just that; tools. In order to show a little bit more what types of novel analyses and insight can be gained from the use of these tools, this chapter will dig a little deeper into the domain-level pangenome created in chapter 1 encompassing 4,770 genomes from the total bacterial domain. This chapter will focus on the use of FindMyFriends and Hierarchical Set analysis as PanViz is currently intended for medium-sized pangenomes with functional annotation. It is possible though, that some of the leads and interesting subsets revealed in this chapter could be further investigated using PanViz. 5.1 An Overview of the Bacterial Pangenome The genomes present in the generated pangenome are not a phylogenetically balanced subset of all bacteria. Rather, they reflect the interest of the scientific world as this is how genomes are chosen for sequencing. Figure 5.1 shows the lack of balance by drawing a treemap of the bacterial evolutionary tree weighted by the number of genomes from each taxon represented in the pangenome. Proteobacteria take up about half of the pangenome, followed by Firmicutes and Actinobacteria. Thirty‑one different phyla are collected in the other category that takes up about 8% of the genomes in the pangenome. As expected, the highest represented classifications reflect the impact of the bacteria on human society. Nine of the ten most prevalent classifications represents bacteria responsible for important human diseases. The last, Xanthomonas citri subsp. citri, is a plant pathogen responsible for citrus canker and of major economic impact124. The lack of balance in the pangenome is not necessarily a problem but should be kept in mind, e.g. when evaluating the ubiquity of gene groups based on number of genomes it represents. A high number of represented genomes only equals a broadly prevalent gene if the genomes are evenly distributed throughout the phylogeny. Figure 5.1: An overview of the phylogeny represented by the bacterial pangenome created in chapter 2, shown as a treemap. Each rectangle is scaled by the number of genomes in the pangenome belong to the taxon it represents. The eight largest phyla are color coded and the ten most prevalent classifications are labeled. To gain a broad overview of the structure of each phyla, the pangenome can be subsetted to only contain the genomes belonging to a specific phylum. Figure 5.2 shows the number of accessory and singleton gene groups for each phyla in raw and normalized values (there is no core present in any phyla). As expected the number of gene groups is related to the number of genomes in each phyla, though Tenericutes and Chlamydiae seems to exhibit much smaller pangenome size than what would be expected by the number of genomes representing them. It should be kept in mind that genomes in these two phyla are generally smaller with a mean size around 1000 genes, so the capacity to contain a higher number of gene groups is limited. There is a surprising agreement between the different phyla in terms of the ratio of accessory gene groups to singleton gene groups, with singletons taking up roughly 70–80% of the gene groups. Bacteroidetes and Cyanobacteria are outliers in this regard with only ~10% accessory gene groups. Bacteroidetes are a major part of the ecology of mammalian colons and results have indicated a high propensity for adaption through horizontal gene transfer125. Cyanobacteria is one of the oldest bacterial phyla, inhabiting a large range of different habitats and showing large morphological diversity126. Thus, the lower ratio of accessory genes for these two phyla is expected. Figure 5.2: An overview of the distribution of gene groups within each of the labeled phyla in figure 5.1. Phyla are sorted by the number of genomes in the pangenome they represent. The top plot shows the raw number of gene groups while the button is normalized to the size of the pangenome. Switching the focus from the genomes to the gene groups, it is seen that, as expected, most gene groups only contain members from a single phylum, but a small selection (9,778) spans multiple phyla, up to maximum of three. The majority of these represents gene groups shared between Actinobacteria and Proteobacteria, but 1,730 of these are related to a single Actinobacterium being consistently present in otherwise Proteobacteria-dominated gene groups. Such a discrepancy strongly suggests a misclassification or a mis-annotated genome, underlining the caution needed when using predefined genome classifications as a guide for data analysis. In the following, the structure of the data itself rather than predefined hypotheses will, to a higher degree, be guiding the analysis. 5.2 Looking at the Panchromosome FindMyFriends allows formatting the pangenome as a graph of gene groups with edges between gene groups that lie adjacent to each other in one or more genomes. This data structure, called a panchromosome, is able to capture the full chromosomal position information in the pangenome in a sparse graph structure and facilitate using common graph algorithms to investigate this structure. Figure 5.3 shows how the genomes from figure 1.2 on page  will be converted to a panchromosomal graph. Figure 5.3: An illustration of the panchromosome graph structure equivalent to the pangenome matrix exemplified in figure 1.2. Each gene group makes up a vertex in the graph and vertexes are connected if their member genes lies adjacent to each other on one or more chromosomes. The start gene group is replicated in the network diagram to simplify the line drawing. The panchromosome of the bacterial pangenome contains 6,887,134 vertices (gene groups) and 7,456,591 edges. The panchromosome contains 1,281 unconnected components with the bulk of the gene groups (79%) collected in the largest component. 1,050 components, representing 6% of the gene groups, only contain singleton gene groups, meaning they only represent a single genome each. Most of the 629 genomes represented in the 1,050 singleton components were also present in some of the larger clusters, indicating that these singleton components represents either plasmids or unique chromosomes of a multi-chromosome organism. 145 genomes are only represented by one or more singleton components indicating no overlap with any other sequence in the dataset. Some of these genomes are obvious sequencing or annotation errors with very low number of genes, while 36 of them are as yet uncultivated (classified as Candidatus), which could explain their low similarity to the rest of the genomes. The largest component in the panchromosome spans all phyla while the others are phylum-specific. In the following, I will focus on a pangenome subset based on the 3,781 genomes represented in the larger component, not because the rest does not contain interesting information, but as a crude, albeit effective, way of filtering out the most erroneous genomes. Interestingly, this removes all but six of the 132 Tenericutes. This phylum is characterized by the smallest genomes of all bacteria as well as their lack of cell-wall. There has been controversy over whether the organisms classified under Tenericutes should constitute their own phylum or be classified under Firmicutes127. The present pangenome strongly support the uniqueness of the Tenericutes at the phylum level, though it cannot rule out the possibility of strong chromosomal degradation following a split from the rest of Firmicutes. The new pangenome contains 5,498,270 (80%) gene groups from 3,781 (79%) genomes and the derived panchromosome now contains 758 independent components with the largest unchanged from the prior panchromosome. While it is tempting at this point to show a network plot of the complexity of the graph, such visualizations seldom have any utility beside making impressive-looking front pages. In order to efficiently visualize the panchromosome structure it is necessary to focus on specific parts of it or formulate specific question to query it for. An example of the latter are the variableRegions() function in FindMyFriends that detects small non-linear areas of the graph that usually are the result of frameshifts, deletions/insertions, annotation errors, etc. Here, I will focus on the former though, by utilizing the Hierarchical Sets analysis presented in chapter 3. 5.3 A Very Large Set Family Looking at 3,781 sets is quite a challenge. The number of possible combination of sets is \\(2^{3781} - 1\\) which exceeds the highest possible number (\\(1.798\\times10^{308}\\)) in most scientific software128. Hierarchical Sets solves this by only looking at the most similar sets, while at the same time providing the largest groupings containing a core. A Hierarchical Set analysis yields 225 independent clusters (see appendix 9 for access to the results). As can be seen in figure 5.4, the number of genomes and gene groups as well as the heterogeneity in the different sub-pangenomes based on the clustering vary widely. 130 of the clusters contain less than six genomes, while the largest contain 418. Hierarchical Set clustering. The number of genomes represented in each intersection is color coded and the phylum of each genome is annotated between the two plots. See chapter 4 for further discussion of this plot type.&quot; width=“90%” /&gt; Figure 5.4: Intersection and union sizes of the set families defined by the branch points of a Hierarchical Set clustering. The number of genomes represented in each intersection is color coded and the phylum of each genome is annotated between the two plots. See chapter 4 for further discussion of this plot type. 5.3.1 The Link to Taxonomy Each cluster is clearly dominated by a single phylum but 41 of them contains multiple phyla up to a maximum of three. The clear dominance of one phylum in the clusters that contain multiple phyla strongly suggest misclassification or annotation error for the odd phyla genomes. In total, 43 genomes are clustered within clusters dominated by a phylum different from their own and these are good candidates for a reexamination. There is no clear pattern in the phylogeny of the 43 genomes as they span 42 different species and 36 different genera so it is likely that they constitute annotation error rather than classification error of the organism they represent. The Actinobacterium genome that consistently was member of the same gene groups as a large subset of Proteobacteria genomes (see section 5.1) is naturally also present among the 43 potential. Zooming in on the clusters dominated by Actinobacteria it is possible to gain a better overview of how core size relate to taxon classification. As can be seen from figure 5.5, the large clusters with high core sizes are generally correlated with the members coming from the same species or closely related species. Species clusters tend to have a core above 1000 gene groups, while genus clusters have a small (up to 30 gene groups), but still present, core. For order level clusters, the core has vanished completely except when the order is only represented by a single genus in which case it reflects the genus core e.g. in the case of Propionibacteriales and Propionibacterium (the cluster figure 5.5A belongs to). These findings are in contrast with earlier top-level pangenome studies. 5, 6, and 7 all found a preserved core at domain, phylum, and order level respectively. Several factors explains this difference: the current pangenome contains eight times the number of genomes of the previously reported bacterial pangenome and the clustering approach results in orthologous groups in contrast to the homologous clustering employed in previous studies. Mostly, there is a one-to-one relationship between genera and independent clusters. While figure 5.5 tend to support the established phylogeny, the largest rightmost cluster shed some doubts as to the classification of certain Mycobacterium species. Mycobacterium tuberculosis is split up in two groups by Mycobacterium bovis, Mycobacterium canettii, and Mycobacterium africanum. All of these strains are part of the Mycobacterium tuberculosis complex whose evolutionary history has been subject to many different interpretations, and a split of M. tuberculosis into two distinct groups has already been suggested129. Furthermore M. africanum and M. canettii seems to be similar to M. bovis and M. tuberculosis respectively, seen from a core gene perspective at least, which also supports earlier findings130,131. Figure 5.5: The intersection stack reperesenting the Actinobacteria dominated clusters. The following strong features, representing specific species are annotated: A: Propionibacterium acnes B: Bifidobacterium animalis C: Bifidobacterium longum D: Bifidobacterium breve E: Corynebacterium pseudotuberculosis F: Corynebacterium ulcerans G: Corynebacterium diphtheriae H: Mycobacterium abscessus I: Mycobacterium tuberculosis J: Mycobacterium bovis. Looking at the non-Actinobacteria-genomes in the Actinobacteria-dominated clusters, it can be seen that they do not simply indicate classification errors. All genomes classified under a different phyla shows very little overlap with the genomes they are clustered together with. Still, these genomes does not constitute the most divergent genomes within the clustering as many Actinobacteria genomes have similar small overlaps with the rest of their cluster. 5.3.2 Data Quality and Lack Thereof In order to investigate how these “misclassified” genomes relate to genomes outside of their clusters, the outlying elements are inspected. Figure 5.6 shows the outlying elements between genomes from clusters that differ in their most dominant phylum. Many, but not all, of the strongest currents are related to “misclassified” genomes and not all “misclassified” genomes result in a high number of outlying elements. There is a clear tendency towards the “misclassified” genomes being responsible for the strongest deviations as measured by the number of outlying elements between genome pairs. The strongest deviation not involving a “misclassified” genome involves 17 outlying elements while the strongest involving a “misclassified” genome involves 3,879. Figure 5.6: Hierarchical edge bundles showing the outlying elements present between genomes in clusters of different dominant phylum. The dominant phylum of each cluster is encoded in the arc color and the positions of genomes deviating from the dominant phylum are encoded as colored triangles outside the arcs. The strongest deviating genome, a Firmicute (Bacillus subtilis) clustered within a Cyanobacteria-dominated cluster, will be investigated further in the following. As can be seen in figure 5.7, this genome shows quite strong similarity with the genomes among which it is clustered, in terms of shared core. This is expected as a very high intersection size would be needed to overcome the strong link it shows to other Firmicutes. Still, it stands out among the other Synechocystis sp. PCC 6803 it is clustered with, by containing more than twice the number of genes. Figure 5.7: The intersection stack of one of the Cyanobacteria dominated clusters containing a strongly outlying Firmicute (Bacillus subtilis). Looking at how it relates to the other Firmicutes in the pangenome it can be seen that it shares a large amount of genes with genomes in one of the larger clusters (dominated by other B. subtilis). Again, the odd B. subtilis does not match in size (the other B. subtilis contain ~4000 genes). In fact, the size of the odd B. subtilis is almost exactly the sum of its intersection size with other B. subtilis and other S. sp. PCC 6803. While this could indicate a strong contamination of the sample prior to sequencing, the strain is in fact the first example of a chimera genome, constructed by cloning a full S. sp. PCC 6803 genome into a B. subtilis132. The fact that such strong genome engineering does not upset the neighborhood based clustering in FindMyFriends is testament to its applicability. The classification of the genome as a B. subtilis can be questioned though, but currently there is no formal approach to classifying chimera genomes. Figure 5.8: The intersection stack of the Firmicutes dominated clusters along with each genomes intersection with the deviating Bacillus subtilis from figure 5.7. 5.3.3 The Curious Case of Escherichia and Shigella It is possible to get an overview of the plasticity of the genomes within each cluster by looking broadly on the outlying elements instead of focusing on between-phyla deviations. As the number of possible outlying elements between two sets is governed by the size of the sets, it can be beneficial to look at the ratio of deviation rather than the raw number of outlying elements in order to not favor large genomes. As seen in figure 5.9 some clusters have a general tendency towards high internal deviation (A and B in figure 5.9), while the deviations in other clusters are driven by a single or a few genomes (figure 5.9C). A single genome is responsible for a very strong deviation across two different independent clusters. This genome, an Escherichia coli grouped together with the Pasteurellales order shares many gene groups with the other E. coli grouped in another cluster. Looking a bit closer reveals that the single misplaced E. coli only contains 134 genes. A single gene group is incidentally shared with all Pasteurellales while none of the 134 genes belonged to the core of the other E. coli, explaining the odd placement in the clustering. Looking into the submission details of the genome sequence reveals a standard E. coli-sized genome so it is likely that the low number of genes is an error of the genome acquisition prior to the pangenome creation. Figure 5.9: The 5% strongest deviations as measured by the ratio of the number of outlying elements to the number of genes in the shortest genome. A: The two most prominent deviation are both located in the same Proteobacteria cluster. B: The next three deviations are all located among Firmicutes. C: Strong deviations related to a single genome. D: The only deviation spanning two clusters. A cluster encompassed by a large subset of Enterobacteriales (Enterobacteriales is split into two independent clusters) serves as a last example. This cluster contains both Escherichia and Salmonella and is responsible for the largest number of outlying elements (figure 5.9A). An overview of the structure and composition of this cluster can be seen in figure 5.10. The cluster seems divided into 3 groups, each dominated by either Klebsiella, Escherichia, or Salmonella. The genus Salmonella as well as Escherichia/Shigella shows very strong internal deviation. Shigella has been proposed to belong to the Escherichia genus18,133–135 but this notion is not supported by the Hierarchical Set analysis. While they are indeed close relatives, Shigella and Escherichia have distinct cores, and Shigella even shares a larger core with the genus Citrobacter. The placement of the Citrobacter genus has been subject to different views, some placing it in closer proximity to Salmonella, while others place it close to Escherichia136,137. The close link to the Shigella genus suggested here has not been reported before. Despite the large shared core between Citrobacter and Shigella, Shigella seem to share a strong link to Escherichia based on the number of outlying elements shared between the two genera; a link not present between Citrobacter and Escherichia. It would seems that while they constitute distinct lineages, Escherichia and Shigella have access to the same gene pool. Figure 5.10: An overview of the structure of the largest cluster in the pangenome, covering a large subset of Enterobacteriales. The upper plot shows the 20% strongest deviations by count of outlying elements, with the genus of each genome annotated by the color of the outside arc. The lower plot shows the intersection stack along with genus annotation. The gene groups making up the outlying elements between Shigella and Escherichia show a bimodal distribution when it comes to the number of times each gene group is part of a deviation (figure 5.11). The large group of elements that are part of more than 900 deviations are likely the result of deletion events within different branches happening after Escherichia and Shigella delineated rather than horizontal gene transfer events. The chance that so many separate mobile elements should be this ubiquitous without being complete pervasive is minimal, though existent, compared to the chance of uncoordinated deletion event happening throughout the two genera. Figure 5.11: A histogram showing the distribution of deviation strengths, as measured by number of times an element is considered outlying, between Shigella and Escherichia genomes. From the panchromosome, it is possible to gain more information about these outlying gene groups. By extracting a subgraph only containing the vertices that represent outlying elements between Shigella and Escherichia only the relational structure between the outlying gene groups is retained. This graph is still of a substantial size but can be visualized using a hive plot138, thus ensuring that the layout reflects the information in the graph. Figure 5.12 shows a hive plot representation of the subgraph, segmenting the gene groups by the number of times they are outlying, as well as the number of connections they have to other outlying gene groups. Single denotes gene groups with no connections to other outlying gene groups, end denotes gene groups with only one connection, segment denotes gene groups with two connections, and hub denotes gene groups with more than two connections. Several structurally interesting things are visible in this representation. There is a small but present subset of gene groups that are unconnected to any of the other outlying gene groups. These isolated gene groups are distributed between all three outlier bins, but proportionally overrepresented in the two extreme bins. These isolated gene groups are likely single gene insertions/deletions from gene cassettes or gene deletion due to frameshift events. It is probable that the isolated outlying gene groups appearing few times are predominantly insertions while those appearing often are due to deletions. 2. Edges, denoting chromosomal adjacency, are colored according to the number of genomes where the two gene groups are adjacent.&quot; width=“90%” /&gt; Figure 5.12: A hive plot showing the subset of the panchromosome containing only the gene groups corresponding to the outlying elements between Shigella and Escherichia. The axes divide the gene groups by the number of times it is considered outlying (see figure 5.11) and each axis is itself divided by the degree of the vertex representing the gene group. Single denotes isolated vertices, i.e. degree = 0, End denotes vertices with degree = 1, Segment denotes vertices with degree = 2 and Hub denotes vertices with degree &gt; 2. Edges, denoting chromosomal adjacency, are colored according to the number of genomes where the two gene groups are adjacent. Another apparent feature is that gene groups that are part of seldom occurring deviations are mostly connected to gene groups from the other two bins if these gene groups are hubs. There is a high likelihood that segment- and end-vertices constitute longer mobile elements and the fact that mobile elements of different prevalence are not directly attached to each other seems natural. Endpoint vertices show a surprising level of connectivity across bins, as it would be expected that they would be closely tied to the segment vertices of their own bin. It could be hypothesized that hub vertices are gene groups lying in close proximity to a recombination site, explaining the proximity to multiple other gene groups. In that case, the end vertices from the “&lt;5” bin that connects to hub vertices from other bins are simply gene cassettes that have integrated themselves into genomes close to other mobile elements. There is a strong connection between segment elements in the “5–945” and “95&lt;” bins and if present, the connection is almost ubiquitous (lack of edges representing few genomes). This could point towards mobile elements that almost always travel in concert, or possibly a gradual segment-wise degradation of a chromosomal area, e.g. a duplicated gene cluster still undergoing mutational changes. Biosynthetic gene clusters, which often propagate through horizontal gene as well as undergo rapid duplication and mutation139,140 are likely candidates for such a scenario. There is also a strong connection between hub vertices in the “945&lt;” bin and the segment vertices in the “5–945” bin, covering the full range of edge strengths. This could suggest that the gene groups represented by these hub vertices are the endpoints of mobile elements that are subject to considerable rearrangement, within the Shigella and Escherichia genomes. Most of the suggestions made above are speculative, but it is apparent based on the structure of the graph, that there is a clear structure to the gene groups that make up the strong deviations within the Shigella and Escherichia lineage. There is a very small percentage that are the result of insertion or deletion of isolated gene groups as the majority are made up of longer chromosomal segments spanning multiple gene groups. While it is possible that some of the segments present in the “945&lt;” bin are simply the result of multiple deletions, everything points towards Shigella and Escherichia having access to a huge shared pool of mobile elements consisting of multiple genes. The graph consists of 304 separate components with the large majority of gene groups (4,064) gathered in a single component. Of the remaining, there are 40 components containing more than 10 gene groups and while it is specious to consider these possible plasmids, they are all part of the main Shigella/Escherichia panchromosome. This leaves transposons and prophages as very likely candidates for the majority of the outlying elements existing between Shigella and Escherichia. This concludes the discourse into the bacterial pangenome, though the data obviously holds much more information than covered here. What can be daunting when venturing into such huge datasets is that there is no single story to tell, and no final concluding remark. While it is often thought that knowledge will reveal itself if just enough data is collected, the opposite often holds true, and strong hypotheses and background knowledge are essential in navigating huge biological datasets such as the bacterial pangenome. Enter at your own peril. References "],
["discussion.html", "6 Taking a Step Back 6.1 The “Why” of it All 6.2 The Future of Large-Scale Pangenome Analysis", " 6 Taking a Step Back “Facts are not science - as the dictionary is not literature.” — Martin H. Fischer, Physicist Most part of the work related to this dissertation has concerned itself with the How?. How can you calculate a high quality pangenome on accessible hardware? How can the user get seamless access to the underlying data in the face of multi-gigabyte datasets? How can scientists investigate large scale pangenomes in the most efficient way? Less attention has been given to the Why?. While it may seem that the hows inherently implicate the whys, this is only true if we accept that scientists need to concern themselves with huge pangenomes. Thus, a very important why remain: Why would you want to create a pangenome containing thousands of genomes, possible spanning multiple genera, phyla, or even the complete bacterial domain? 6.1 The “Why” of it All For all the development within sequencing technology, CPU speed, algorithms, etc. the world of comparative microbial genomics seems largely content with creating and analyzing small, species-level pangenomes. While it can be argued that the reason for this is simply that pangenome analysis is so closely tied to investigation into species dynamics, this does not explain why species level pangenomes often are created based on a couple of dozen genomes, when more are available. The assertion in this dissertation is that algorithmic complexity has limited large pangenome creation to the few in possession of high performance computing hardware. This has in turn limited the user base for analytical approaches to large pangenomes resulting in less attention to the development of these. Lack of utilities for investigating large pangenomes are then again limiting the perceived value of large pangenomes, making researchers less inclined to spend days or weeks of computation time creating these large pangenomes. While one part of the equation, namely the computational cost of large pangenome analyses, is clearly addressed by FindMyFriends, the biggest mountain to climb is in convincing the scientific community of the utility of large pangenomes. 6.1.1 Why You Would Want a Large Pangenome Considering only species level pangenomes for the moment, why would you compare 1,000 different genomes when most of the information is captured in the first 50? After all, more data results in longer running post processing, visualizations gets cluttered and confusing, and your computer might run out of memory. The obvious scientific answer is that selecting the best 50 representative genomes a priori can be quite difficult. An often neglected issue in many pangenome studies on the species level is the inherent sampling error that is present when acquiring genomes from public repositories or even sampling in the field. Strains are sequenced for a multitude of reasons but seldom to ensure a balanced representation of a species. As an example, at least 10% of the E. coli genomes included in the bacterial pangenome are derived from K‑12. In order to cover all bases when creating species level pangenomes everything within reach must be included – redundancy can always be removed at a later stage. It is true that large datasets can be unwieldy to handle and this in turn can impair the efficiency of analysis and interpretation, but this is largely a matter of improving the data structures used to handle this sort of data. FindMyFriends addresses this to some extend by providing memory efficient pangenome classes with transparent access to all parts of the dataset. This can be improved further by moving the back-end storage to a database using the class extensions provided by FindMyFriends. In the end though, it would serve the community well to converge towards a common and efficient pangenome file format in the way that other *omics fields have (e.g. mzML within the field of proteomics). While this is a huge undertaking it would remove a lot of duplicated infrastructure work from developers as well as ensuring easy exchange of data between tools and pipelines. 6.1.2 Why You Would Want a Top-Taxon Pangenome While approaches and pipelines needs to be adjusted to accommodate large species-level pangenomes, it is essentially just more of the same. The fundamental biological question remains, such as: What constitute this species? What makes this genome unique? How is the dynamic of the genomes in this species? Is the core well-defined? As pangenomes have been tied to the species level, these types of questions, and how to answer them has become an integral part of pangenome analysis. Moving up to higher taxon level pangenomes results in all of these questions loosing their meaning and the biggest challenge for top-taxon pangenomics will be in defining relevant biological questions that can be investigated using the pangenome. Considering for a moment the situation where the research is uniquely interested in a single species, a phylum or domain-level pangenome can still provide additional insight into the species that is invisible in a species-level pangenome. What is the closest related species? Is the species distinction warranted? If so, which part of the core is unique to this species? These question generally pertain to the core of a species and how the core is related to other species. Usually the core is considered the essence of a species but that is only true for the part of the core that is not shared by other species. Only a top-taxon pangenome will reveal that part. Species accessory and singleton gene group interpretation can also be augmented using top-taxon pangenomes. Singletons are often thought to consist in a large part by annotation errors and pseudo genes. The presence of genes, that at the species level are singletons, within other genomes could help in identifying possible mobile elements, or at least remove the notion of them being annotation errors. Identifying which part of the accessory gene groups are shared with other taxons can also shed light on the evolutionary history of a species, both by giving more weight to species-specific accessory gene groups during clustering, but also in identifying strain subsets that have been in close contact with a specific other taxon. Despite the utility of top-taxon pangenomes when doing species-level analysis, the largest gain from looking at top-taxon pangenomes comes when the analysis is released from the constraints of a single species. Chapter 4 tries to illustrate some of the overarching questions that can be asked when looking at different aspects of the bacterial pangenome. Panchromosomal analysis can look into how chromosomal segments overlap between genomes. Interestingly 79% of all gene groups are connected in a large component. While mobile elements can play a role in connecting otherwise unconnected chromosomal segments, it could be interesting to investigate this component further in terms of identifying evolutionary events that might have lead to the overall phylum or order divisions. Hierarchical Set analysis has proved to be a very strong approach to handle the massive amount of data in the bacterial pangenome. Besides providing a meaningful clustering that largely supports the current phylogeny, the intersection stack visualization clearly show the evolution in core size as similarity increases. Much has been said about the possibility of a pangenome based species definition. Such a universal definition is not apparent from the bacterial pangenome as many species undergo a very gradual falloff in core size as they are merged with their nearest species (see e.g. figure 5.8 on page ). Coupled with this is of course again the notion of acquiring a balanced pangenome for such an investigation. Any species definition based on the current bacterial pangenome will largely be based on the dynamics of the best represented species (see figure 5.1) rather than a global tendency, as many species are only represented by a single or a few genomes. Instead of forcing structure revealed by pangenomes into the current phylogeny, the bacterial pangenome can instead be used to define a new, supplementary hierarchy based on Hierarchical Set analysis. The independent cluster concept is a natural division of the genomes represented in the pangenome, as it constitutes the largest groupings containing a core. While this imposes an upper bound on the clustering, largely equivalent to the order level, the resulting clusters have a strong genomic interpretation. It might also be possible to define a tight clustering between closely related genomes by either looking at sudden drops in the rate of core size increase, or alternatively based on the set family heterogeneity measure defined in chapter 3. A more balanced dataset is needed to justify any global threshold definition though. The notion of outlying elements introduced as part of the Hierarchical Set analysis holds a lot of power in visualizing the similarities between genomes that is not captured in a tree structure and has been shown to easily detect problematic genome sequences as well as highlighting interesting inter-species relationships. The investigation into the Shigella/Escherichia cluster showed a very strong correspondence between outlying elements in Hierarchical Sets and mobile elements in a genome context by mapping the elements back to the panchromosome data structure. This interoperability between different data structures relating different aspects of the pangenome with each other is key in unraveling the knowledge captured in top-taxon level pangenomes. Much work is still needed in terms of defining meaningful statistics and classifications to aid in the analysis of large heterogeneous pangenomes. 6.2 The Future of Large-Scale Pangenome Analysis While FindMyFriends lays down the foundation for a future of large pangenome analysis by providing fast and accurate pangenome creation, memory efficient data handling and transparent access to all parts of the pangenome, there is still much work that needs to be done. Despite all the effort that have been put into optimizing sequence similarity based clustering of genes, experience with FindMyFriends has shown that chromosomal neighborhood is the deciding factor when arriving at the correct clustering. To put it bluntly, any method capable of creating a coarse clustering of sequences based on similarity will suffice for the first step in the FindMyFriends clustering. In spite of this, algorithms for neighborhood based clustering have received relative little attention and exposure. The speed of CD‑Hit88, which is used for the preliminary grouping in FindMyFriends, makes the neighborhood based clustering the rate limiting step and further speed gains are likely to be found in improving this algorithm or its implementation. Fortunately, the modular and expandable nature of the FindMyFriends framework makes it easy to incorporate improvements or completely new algorithms for the different steps of the analysis pipeline. The idea of merging the pangenome with chromosomal position, in FindMyFriends called a panchromosome, offers an alternative graph based data structure that opens up for novel types of analyses. Roary65 also supports outputting this type of data representation and a similar concept is investigated by 42 using PanOCT66. Currently, FindMyFriends uses the panchromosome to detect local chromosomal area with variation, usually signifying insertion/deletion and frameshift events, as well as in automatically correcting some grouping errors. Hopefully other algorithms based on this data structure will offer novel possibilities, both within visualization and classification of gene groups. This is still a relatively new area within pangenome analysis so it is an open question whether it will be widely adopted. The value in the panchromosome representation during the investigation into the bacterial pangenome was very clear though, so it is my hope that further work will be invested in it. Visualizations plays an integral part in the analysis and communication of biological data. Despite this, relatively little attention has been given to development of truly novel approaches to pangenome visualization, even as the current approaches fail to scale with the increase in available data. PanViz provides a novel approach to gaining an overview of the distribution of gene groups within different pangenome subsets, as well as communicating the differences between subsets using animations. The fundamental visualization approaches are very scalable due to the reliance on summary statistics, but the currently employed genome and pangenome navigation technique puts a limit to the size of the pangenome being visualized. Further work should be put on defining a scalable navigation scheme that accommodates an unlimited number of genomes. The current focus of the visualization is in communicating the structure of pangenomes and allow for intuitive and powerful gene group queries. These features could be further enhanced by improving the visual cues given to differences between pangenome subsets, allowing definition of pangenome subsets outside of the hierarchical structure, as well as enhancing the visual querying mechanism. The way GenoSets119 visually builds up the queries using parallel sets gives a great overview of how a certain selection of gene groups has been reached, a feature that is lacking in PanViz despite the many overlaps there is in the querying mechanisms of the two visualizations. Clustering and classification are essential approaches to organizing and decluttering visualizations of large datasets. Hierarchical Sets exemplifies this by simultaneously providing a clustering of the genomes/sets and a classification of some of the elements/gene groups as outlying elements. It could be worthwhile to investigate additional classifications of elements, in addition to how they deviate, based on their presence/absence pattern in the set hierarchy. An obvious addition would be to classify elements based on uniqueness to certain branches, a measure that could aid in visualizing the uniqueness of the branch itself. Another possibility is to somehow look at the symmetric difference between branches in terms of their intersection or union in order to measure the distance between branch points. Besides looking at additional element classification systems, additional clustering approaches could be of interest. While the agglomerative intersection-optimizing algorithm currently implemented shows great promise in resolving genomes at genus and species level, other approaches could illuminate alternative features. One approach could be to define a divisive clustering that recursively minimized the number of outlying elements between sub-clusters. Such a clustering would have higher complexity than the current one, but could help in showing whether optimizing core size during clustering automatically minimized the degree of deviation. Hierarchical Set analysis is essentially oblivious to any biological meaning of the data as it is based purely on set algebra. While the results it provides contain ample of biological insight, the Infinitely Many Genes model56 has shown the value of modeling data based on biologically meaningful parameters, both in terms of interpretation and quality of the final model. Whether infusing the clustering applied by Hierarchical Sets with more biological information would yield any benefits is an open question. Still, if the clustering did not improve it would in essence indicate that core size is a good proxy for evolutionary relationship, making the effort worthwhile. The current approaches to modeling pangenome data, e.g. Heaps Law54, binomial mixture models55, and Infinitely Many Genes model, are tied to species level pangenomes and does not transfer well to very heterogeneous pangenomes as these violates the assumptions of the models. One approach to model more heterogeneous pangenomes would be to look for the first branch points in the Hierarchical Sets clustering where the current models begin to describe the data in a meaningful way. Potentially this could even provide a new species definition, e.g. a species is defined as the most distant delineage point where the pangenome remains well defined. Another possibility would be to try to model the clustering directly, thus extracting descriptive parameters for each branch point that could then be used to define thresholds for different genome classification hierarchies. \\vspace{1em} In the end the success of tools and approaches is not only based on their merits, but whether they end up attracting a sustainable number of users. Practitioners of pangenome analyses have proven very resilient to change and venerable algorithms such as OrthoMCL63 are still in heavy use today despite having been superseded by faster and more accurate algorithms. Indeed, new tools that use OrthoMCL as a possible back-end are still being released83. New tools need to present a very compelling argument for switching away from a familiar and well understood legacy tool. This is especially pertinent for FindMyFriends as both PanViz and Hierarchical Sets are supplementary tools that do not need to replace existing workflows. I hope that the features of FindMyFriends resonates with the community and that the modular nature of the framework allows it stay relevant in the fast-changing world of sequence analysis. References "],
["conclusion.html", "7 This is the End", " 7 This is the End “… if you swear that there’s no truth and who cares//How come you say it like you’re right?” — Connor Oberst, We Are Nowhere And It’s Now This dissertation has had two main goals: to provide a framework for creating and working with large, heterogeneous, pangenomes and to provide visualizations and analyses that are well suited for investigating such pangenomes. In chapter 1 the FindMyFriends package for R was introduced. FindMyFriends has three main features: a fast, scalable, and accurate gene grouping algorithm, an API that allows for transparent and efficient access to all levels of raw, intermediary, and high-level data, and an extensible class system that allows users to plug FindMyFriends into their own sequence storage backend if needed. The quality and speed of the gene grouping algorithm was assessed by comparison to other current algorithms. It was found that FindMyFriends performs both faster and more accurate than the algorithms it was tested up against. The scalability of the algorithm was shown by using it to calculate the pangenome of 4,770 genomes from all branches of the bacterial domain, which could be done in 99 hours on a high-end workstation machine. Chapter 2 introduced PanViz, an interactive and easily sharable visualization of functionally annotated pangenomes. PanViz facilitates exploration of pangenome structures by providing natural transitions between genome subsets and visualization types. Furthermore, it provides a visual querying system that allows the user to quickly pinpoint the gene groups of interest. While PanViz is agnostic to the algorithm used for pangenome creation it can operate seamlessly with the data structures provided by FindMyFriends using the provided API. In the last article, presented in chapter 3, I described a novel analysis and visualization technique, Hierarchical Sets, for large collections of sets. The implications for pangenome analysis was illustrated through the parallels between pangenome and set concepts and the technique was applied to a genus level pangenome based on 46 Streptococcus. The published implementation of Hierarchical Sets can, like PanViz, work directly with the output generated by FindMyFriends, as well as a range of common set data representation. The scalability and usability of both the FindMyFriends framework as well as the Hierarchical Sets analysis was showcased in chapter 4. It was shown how Hierarchical Sets was able to provide a scaffold useful for both getting an overview of the full pangenome as well as for zooming in on different parts of the pangenome. The clustering as well as the outlying elements provided by Hierarchical Sets was efficient in detecting and explaining irregularities within the genomes of the pangenome. Furthermore, it was shown how these analyses can be used to investigate the relations between different groupings of genomes. The evolutionary relationship between Escherichia and Shigella was examined and it was shown that while the two genera share a large amount of genetic material, they each form their own distinct lineage with separate core genes. By combining the results from the Hierarchical Sets analysis with the panchromosome structure available in FindMyFriends it was possible to show how most of the outlying elements between Escherichia and Shigella were interconnected and pinpoint their nature to either transposons or prophages. \\vspace{1em} While the presented tools and techniques are not exhaustive, they provide a solid backbone for the creation and investigations of large-scale pangenomes. Hopefully, they can play a role in taming the massive influx of sequence data and make pangenome analyses on a larger scale accessible to everyone. "],
["supplementary-figures.html", "8 Supplementary Figures 8.1 FindMyFriends: A Framework for Fast and Accurate Pangenome Analysis of Thousands of Diverse Genomes 8.2 PanViz: Interactive Visualization of the Structure of Functionally Annotated Pangenomes 8.3 Hierarchical Sets: Analyzing Pangenome Structure through Scalable Set Visualizations", " 8 Supplementary Figures This appendix contains the supplementary figures from the three articles presented in this dissertation. The numbering of the figures is as referenced in their respective articles, thus it does not follow the figure numbering of the dissertation. \\vspace*{\\fill} 8.1 FindMyFriends: A Framework for Fast and Accurate Pangenome Analysis of Thousands of Diverse Genomes \\vspace*{\\fill}\\newpage \\begin{figure} \\centering \\includegraphics[width=\\textwidth]{figures/FMF/figure_S1} \\caption[]{The evolution in cosine similarity as K is increased from 3 to 7. Each line corresponds to a gene pair. It can be seen that the strongest difference happens when increasing K from 3 to 4.} \\end{figure} \\begin{figure} \\centering \\includegraphics[width=\\textwidth]{figures/FMF/figure_S2} \\caption[]{The distribution of similarity values using cosine similarity with K=3 and K=4, as well as BLAST derived similarity values.} \\end{figure} \\begin{figure} \\centering \\includegraphics[width=\\textwidth]{figures/FMF/figure_S3} \\caption[]{A scatterplot showing the relation between K-mer and BLAST derived similarity values.} \\end{figure} \\begin{figure} \\centering \\includegraphics[width=\\textwidth]{figures/FMF/figure_S4} \\caption[]{Semi-log plot of number of ORFs in complete bacterial genomes and the number/percent of paralog. The red line represents the number of ORFs; the blue line represents the number of parlogs. The small panel on the top-left shows the boxplot of distribution of papralog percent of the dataset (4408 complete bacterial genomes that have more than 1000 ORFs).} \\end{figure} \\begin{figure} \\centering \\includegraphics[width=\\textwidth]{figures/FMF/figure_S5} \\caption[]{Semi-log plot of number of members of individual protein families and the number of genomes that associated on the individual protein family. Red crosses indicate the number of members of individual protein family. The sizes of the crosses show the faction of common PfamA domains. The blue line represents the number of genomes associate with the individual protein family. The small panel on the top-left shows the histogram of the distribution of common pfam faction. Only protein families with more then a hundred members are included in the plot.} \\end{figure} \\vspace*{\\fill} 8.2 PanViz: Interactive Visualization of the Structure of Functionally Annotated Pangenomes \\vspace*{\\fill}\\newpage \\begin{figure} \\centering \\includegraphics[width=\\textwidth]{figures/PV/figure_S1.png} \\caption[]{Overview of PanViz. \\textbf{A:} Scatter plot and dendrogram overview of the genomes in the pangenome, both based on gene group presence/absence. \\textbf{B:} Legends and lookup information. \\textbf{C:} Gene group table and set operation controls. Set operations are performed between the current content of the table and the content of the visual element that is clicked. \\textbf{D-F:} The different states of the pangenome view. \\textbf{D:} Radial representation of the top level GO terms within the main pangenome groups. \\textbf{E:} Comparison between content of genomes and pangenome. \\textbf{F:} Zoomable treemap representing the GO terms in different parts of the pangenome.} \\end{figure} \\vspace*{\\fill} 8.3 Hierarchical Sets: Analyzing Pangenome Structure through Scalable Set Visualizations \\vspace*{\\fill}\\newpage \\begin{figure} \\centering \\includegraphics[width=0.8\\textwidth]{figures/HS/figure_S1.pdf} \\caption[]{The result of applying three different clustering algorithms and three different distance measures on the pangenome matrix used in the paper. The ordering is not the same across plots, and the figure serves mainly to show how standard clustering of this type of data is &quot;top-heavy&quot;, i.e. the top-most branch points are at almost equal values.} \\end{figure} \\begin{figure} \\centering \\includegraphics[width=\\textwidth]{figures/HS/figure_S2.pdf} \\caption[]{A matrix plot showing pairwise statistics for the 46 sets in the pangenome. The top half shows the intersection size of the set family defined by the pairs nearest common branch point as the background shading, while showing the intersection size of the pair as a smaller rectangle on top. The bottom half shows the pairwise union size, as well as showing the hierarchy defined by the clustering as white lines.} \\end{figure} \\begin{figure} \\centering \\includegraphics[width=\\textwidth]{figures/HS/figure_S3.pdf} \\caption[]{A scatter plot showing all outlying elements as a function of how often they are present in a set and for how many set pairs they are considered outlying.} \\end{figure} "],
["supdata.html", "9 Supplementary Data", " 9 Supplementary Data Most of the data utilized in this dissertation does not fit into a printed format and is thus instead made available for download. The folder is accessible through: \\vspace{1em}\\begin{center} \\url{https://goo.gl/WCGe1H} \\end{center}\\vspace{1em} and contains the following data: CompleteGenbank.tar.gz An archive with all the protein fasta files used for creating the bacterial domain pangenome. The files are named by their checksum and divided into subfolders based on their filename. CompleteGenbank_meta.xlsx A spreadsheet with metadata about each genome in the archive described above. This file links the checksum derived filename with taxonomy and assembly information. bac_pan_slim.rds An RDS file containing the pangenome created by FindMyFriends based on the genomes in the above archive. The file contains a pgSlimLoc object that can be investigated using FindMyFriends. Pangenome matrix, panchromosome, and other representations can all be derived from this object. hierarchical_set_res.rds An RDS file containing the result of performing Hierarchical Set analysis on the pangenome in the file above. The file contain a HierarchicalSet object that can be further investigated using Hierarchical Sets. PanViz.html An HTML file containing the PanViz visualization created in chapter 2. The file is fully self-contained and can be opened and explored in any modern browser supporting HTML5. "],
["references.html", "References", " References "]
]
